name: Build and Deploy Presentations

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build presentations
      run: |
        # Generate dynamic index page
        node scripts/generate-index.js
        
        # Find all presentation.md files and build them individually
        find . -name "presentation.md" -type f | while read -r file; do
          dir=$(dirname "$file")
          echo "Building presentation: $file"
          echo "Output directory: $dir"
          
          # Use explicit file path to ensure only one file is processed
          output_file="$dir/index.html"
          echo "Input file: $file"
          echo "Output file: $output_file"
          
          # Build with explicit paths to prevent multiple file detection
          npx marp "$file" --output "$output_file" --html
          
          echo "âœ… Built: $output_file"
          echo "---"
        done
        
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        # Upload entire repository
        path: '.'

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
      
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
